<?xml version="1.0" encoding="UTF-8"?>

<!--  
해당 XML파일이 Mapper역할이라는것을 명시하기위해 필요한 Doctype이다. 
공식문서URL : https://mybatis.org/mybatis-3/getting-started.html
버전확인 : https://mvnrepository.com/artifact/org.mybatis/mybatis
--> 
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!--  
Mapper파일의 최상위 엘리먼트는 <mapper>이다. 
namespace의 속성
	: 해당 매퍼파일을 호출하기 위해 정의한 인터페이스의 패키지를 포함한
	풀 경로를 기술한다. 해당 인터페이스는 컨트롤러와 Mappeer(DAO)사이를
	연결해주는 역할을 하는 서비스객체로 사용된다.  
-->  
<mapper namespace="mybatis.MybatisDAOImpl">
 
 	<!-- 방명록 게시판의 게시물 갯수를 카운트하여 정수로 반환한다. -->
 	<!-- 
 	속성설명 
 		id : 실제 호출되는 메서드명과 동일한 이름으로 기술한다. 
 			컨트롤러에서는 해당 Mapper를 호출하기 위해 interface에 정의된
 			추상메서드를 호출하게된다. 
 		resultType : 쿼리 실행후 반환되는 값의 타입을 명시한다. 이때는
 			패키지명을 포함한 풀 경로를 기술해야 한다. 
 	-->
	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) from myboard
	</select>
	<!-- 목록에 출력할 게시물을 select한 후 결과는 ArrayList<MyBoardDTO>타입으로
	반환한다. Mybatis는 레코드 인출을 위한 <select>엘리먼트로 실행할 경우 반환값은 
	List컬렉션으로 생성해준다. -->
	<!-- 인터페이스에 정의된 listPage(int s, int e) 메서드 호출시 전달된 파라미터
	s, e는 아래와 같이 param1, param2로 전달되어 사용된다. 즉, 인파라미터 설정시 
	별도의 메서드 없이 즉시 사용할 수 있다.  -->
	<select id="listPage" resultType="mybatis.MyBoardDTO">			
		SELECT * FROM (
		    SELECT Tb.*, rownum rNum FROM (
		        SELECT * FROM myboard ORDER BY idx DESC
		    ) Tb
		)
		WHERE rNum BETWEEN #{param1} AND #{param2}
	</select>
	
	
	<!--  
	@Param 어노테이션에서 지정한 별칭을 사용해서 인파라미터를 처리한다. 
	일련번호는 기존과 동일하게 시퀀스를 통해 입력한다. 
	-->
	<insert id="write">
		INSERT INTO myboard (idx, id, name, contents)
		VALUES
		(myboard_seq.nextval, #{_id}, #{_name}, #{_contents}) 
	</insert>
	
	
	
	
	
	
</mapper>