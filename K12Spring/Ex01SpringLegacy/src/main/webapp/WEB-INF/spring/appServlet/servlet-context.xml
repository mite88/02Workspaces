<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/static/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- 컨트롤러엣 JSP파일의 파일명을 반환하면 뷰 리졸버가 받아 최종 경로를 완성함 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 애플리케이션 시작시 자동으로 스캔할 기본패키지 지정 -->
	<!-- SpringMVC로 요청시 DispatcherServlet는 프로젝트 파일 내의 servlet-context.xml 파일의 
		@Controller 인자를 통해 등록한 요청 위임 컨트롤러를 찾아 매핑(mapping)된 컨트롤러가 존재하면 @RequestMapping을 
		통해 요청을 처리할 메소드로 이동한다. -->
	<context:component-scan base-package="com.kosmo.springlegacy" />
	<context:component-scan base-package="autoscan" />

	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/static/**" location="/resources/" />
	
	

	<!-- 파일업로드 빈 생성 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="200000000" />
		<beans:property name="maxInMemorySize" value="200000000" />
	</beans:bean>

	
	<!--파일다운로드 빈 생성 -->
	<beans:bean id="fileDownloadView" class="common.FileDownloadView" />
	<beans:bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>

</beans:beans>
